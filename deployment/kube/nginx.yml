---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: default
  labels:
    app: nginx
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: nginx
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: default
data:
  nginx.conf: |
    events {}
    http {
      include /etc/nginx/conf.d/*.conf;

      upstream auth_service {
        server 127.0.0.1:8080;
      }
      
      upstream frontend {
        server 127.0.0.1:8050;
      }

      upstream user_service {
        server 127.0.0.1:8081;
      }

      upstream content_service {
        server 127.0.0.1:8082;
      }

      upstream plugins_service {
        server 127.0.0.1:8083;
      }

      client_max_body_size 1024m;

      server {
        server_name api.socigy.com;
        listen 80;
        http2 on;

        if ($request_method !~ ^(GET|POST|PUT|PATCH|DELETE|OPTIONS)$) {
          return 405;
        }

        proxy_temp_file_write_size 64k;
        proxy_connect_timeout 10080s;
        proxy_send_timeout 10080;
        proxy_read_timeout 10080;
        proxy_buffer_size 64k;
        proxy_buffers 16 32k;
        proxy_busy_buffers_size 64k;
        proxy_redirect off;
        proxy_request_buffering off;
        proxy_buffering off;
        proxy_hide_header X-Envoy-Upstream-Service-Time;
        proxy_hide_header Server;

        proxy_pass_header Access-Control-Allow-Origin;
        proxy_pass_header Access-Control-Allow-Methods;
        proxy_pass_header Access-Control-Allow-Headers;
        proxy_pass_header Access-Control-Allow-Credentials;
        proxy_pass_header Access-Control-Max-Age;

        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self'; font-src 'self'; object-src 'none'; media-src 'self'; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location ~ ^/v1/auth/realtime(/|$)(.*) {
          keepalive_timeout 65;
          keepalive_requests 1000;
          sendfile on;
          tcp_nopush on;
          tcp_nodelay on;

          rewrite ^/v1/auth(/|$)(.*) /$2 break;
          proxy_pass http://auth_service;
          proxy_http_version 1.1;

          # WebSocket headers
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";

          # Prevent buffering of WebSocket packets
          proxy_buffering off;
        }

        location ~ ^/v1/auth(/|$)(.*) {
          rewrite ^/v1/auth(/|$)(.*) /$2 break;
          if ($http2) {
            grpc_pass grpc://auth_service;
            break;
          }

          proxy_pass http://auth_service;
          proxy_http_version 1.1;
          proxy_set_header Connection "keep-alive";
        }

        location ~ ^/v1/user/realtime(/|$)(.*) {
          keepalive_timeout 65;
          keepalive_requests 1000;
          sendfile on;
          tcp_nopush on;
          tcp_nodelay on;

          rewrite ^/v1/user(/|$)(.*) /$2 break;
          proxy_pass http://user_service;
          proxy_http_version 1.1;

          # WebSocket headers
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";

          # Prevent buffering of WebSocket packets
          proxy_buffering off;
        }

        location ~ ^/v1/user(/|$)(.*) {
          rewrite ^/v1/user(/|$)(.*) /$2 break;
          if ($http2) {
            grpc_pass grpc://user_service;
            break;
          }

          proxy_pass http://user_service;
          proxy_http_version 1.1;
          proxy_set_header Connection "keep-alive";
        }

        location ~ ^/v1/content/realtime(/|$)(.*) {
          keepalive_timeout 65;
          keepalive_requests 1000;
          sendfile on;
          tcp_nopush on;
          tcp_nodelay on;

          rewrite ^/v1/content(/|$)(.*) /$2 break;
          proxy_pass http://content_service;
          proxy_http_version 1.1;

          # WebSocket headers
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";

          # Prevent buffering of WebSocket packets
          proxy_buffering off;
        }

        location ~ ^/v1/content(/|$)(.*) {
          rewrite ^/v1/content(/|$)(.*) /$2 break;
          if ($http2) {
            grpc_pass grpc://content_service;
            break;
          }

          client_max_body_size 1000m;

          proxy_pass http://content_service;
          proxy_http_version 1.1;
          proxy_set_header Connection "keep-alive";
        }

        location ~ ^/v1/plugins/realtime(/|$)(.*) {
          keepalive_timeout 65;
          keepalive_requests 1000;
          sendfile on;
          tcp_nopush on;
          tcp_nodelay on;

          rewrite ^/v1/plugins(/|$)(.*) /$2 break;
          proxy_pass http://plugins_service;
          proxy_http_version 1.1;

          # WebSocket headers
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";

          # Prevent buffering of WebSocket packets
          proxy_buffering off;
        }

        location ~ ^/v1/plugins(/|$)(.*) {
          rewrite ^/v1/plugins(/|$)(.*) /$2 break;
          if ($http2) {
            grpc_pass grpc://plugins_service;
            break;
          }

          client_max_body_size 100m;

          proxy_pass http://plugins_service;
          proxy_http_version 1.1;
          proxy_set_header Connection "keep-alive";
        }

        location /nginx_status {
          stub_status;
          allow 127.0.0.1;
          deny all;
        }

        location /metrics {
          proxy_pass http://127.0.0.1:9113/metrics;
          allow 127.0.0.1;
          deny all;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
          root /usr/share/nginx/html;
        }
      }

      server {
        server_name socigy.com;
        listen 80;
        listen [::]:80;
        http2 on;
        root /var/www/socigy;

        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self' https: 'unsafe-inline' 'unsafe-eval'; img-src 'self' https: data:; font-src 'self' https: data:;" always;

        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        location /_next/static {
            alias /var/www/socigy/.next/static;
            expires 365d;
            add_header Cache-Control "public, max-age=31536000, immutable";
        }

        location /static {
            alias /var/www/socigy/public;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
        }

        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            send_timeout 60s;
        }

        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        # Block hidden files
        location ~ /\.(?!well-known) {
            deny all;
        }
      }

      # WWW Redirect
      server {
          server_name www.socigy.com;
          listen 80;
          listen [::]:80;
          return 301 http://socigy.com$request_uri;
      }
    }
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx
  namespace: default
automountServiceAccountToken: true
---
apiVersion: consul.hashicorp.com/v1alpha1
kind: ServiceDefaults
metadata:
  name: nginx
  namespace: default
spec:
  protocol: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: default
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      service: nginx
      app: nginx
  template:
    metadata:
      labels:
        service: nginx
        app: nginx
      annotations:
        consul.hashicorp.com/connect-inject: "true"
        consul.hashicorp.com/connect-service-upstreams: "auth:8080,user:8081,content:8082,plugins:8083,frontend:8050"
    spec:
      serviceAccountName: nginx
      containers:
        - name: nginx
          image: nginx:stable-alpine
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx

        - name: nginx-prometheus-exporter
          image: nginx/nginx-prometheus-exporter:latest
          args:
            - "-nginx.scrape-uri=http://127.0.0.1/nginx_status"
          ports:
            - containerPort: 9113
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: nginx.conf
                path: nginx.conf
